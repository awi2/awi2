
user  www-data;
worker_processes  3;

error_log  /tmp/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
#    default_type  application/octet-stream;
    default_type  text/html;
    index  index.html index;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /tmp/access.log  combined;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;


    server {
        server_tokens off;
        listen      80 default_server;
        server_name  _;

        charset utf-8;
        return 301 https://$host$request_uri;

#        access_log  logs/host.access.log  main;
#        root /usr/share/nginx/html;


        location / {
            index  index.html;
            try_files $uri $uri/ =404;
            autoindex  off;

        }

        error_page  404              /p/404;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        }


       location ~ ^/favicon.ico$ {
                root /usr/local/nginx/html/web/skins/default/images;
                log_not_found off;
                access_log off;
                expires max;
       }

       location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
       }

       location ~ ^/(README|INSTALL|LICENSE|CHANGELOG|UPGRADING)$ {
                deny all;
       }
       location ~ ^/(bin|SQL)/ {
                deny all;
       }

       location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
       }
      }


    # HTTPS server
    #
    server {
        listen       443 ssl;
        server_name  site.org;
        server_tokens  off;
        charset utf-8;
        root  /usr/share/nginx/html;
        access_log  /tmp/host.access.log  combined;

        ssl_certificate      sitecert.pem;
        ssl_certificate_key  sitekey.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_protocols TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
        ssl_prefer_server_ciphers  on;

        location / {
            index  index.html;
            try_files $uri $uri/ =404;
            autoindex  off;
            autoindex_exact_size off;
#            autoindex_format html;
            autoindex_localtime off;

        }

        location /p {
            types  {}
            default_type  text/html;
#            index  index.html;
            try_files $uri $uri/ =404;
#            autoindex  on;
#            autoindex_exact_size off;
#            autoindex_localtime off;
            fancyindex on;
            fancyindex_exact_size off;
            fancyindex_css_href  "/s/f.css";

        }

        location /s {
            index  index.html;
            autoindex  off;

        }


        location /x {
            types  {}
            default_type  text/html;
#            index  index.html;
#            try_files $uri $uri/ =404;
            autoindex  off;
#            autoindex_exact_size off;
#            autoindex_format html;
#            autoindex_localtime off;
#            location ~* {
#                add_header Content-Type text/html;
#            }
        }


        error_page  404              /404.;
        error_page  403              /403.;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.;
        location = /50x.html {
        }


       location ~ ^/favicon.ico$ {
                root /usr/local/nginx/html/web/skins/default/images;
                log_not_found off;
                access_log off;
                expires max;
       }

       location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
       }

       location ~ ^/(README|INSTALL|LICENSE|CHANGELOG|UPGRADING)$ {
                deny all;
       }
       location ~ ^/(bin|SQL)/ {
                deny all;
       }

       location ~ /\. {
                deny all;
                access_log off;
                log_not_found off;
       }
    }

}
